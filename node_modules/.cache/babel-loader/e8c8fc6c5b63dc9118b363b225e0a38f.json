{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/Devolop/React/nd0191-c1-myreads/starter/src/components/SearchView/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport SearchBooks from \"./SearchBooks\"; // controlled component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  // state that holds my search quety\n  const [query, setQuery] = useState(\"\"); // state that holds books returned from the API\n\n  const [books, setBooks] = useState([]); // using a callbackHook so that my async function does need to reintialize with every render #### that a soultion for react warning\n\n  const searchBooksAPI = useCallback(async () => {\n    if (query !== \"\") {\n      const res = await BooksAPI.search(query); // handle API errors\n\n      if (!res.error) {\n        setBooks(res);\n      } else {\n        setBooks([]);\n      }\n    }\n  }, [query]); // Function that handels the change\n\n  const onHandleChange = e => {\n    setQuery(e.target.value);\n  }; // Debounce the onHandleChange function to improve the performance and minimize the API requests\n\n\n  const debouncedResults = useMemo(() => {\n    return debounce(onHandleChange, 300);\n  }, []); // with every letter or any change in the search input i requsting the server\n\n  useEffect(() => {\n    console.log(\"a time\");\n    searchBooksAPI();\n\n    if (query === \"\") {\n      setBooks([]);\n    }\n\n    return () => {\n      // clean up any side effects from debounce\n      debouncedResults.cancel();\n    };\n  }, [searchBooksAPI, query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: books.length > 0 && query !== \"\" ?\n      /*#__PURE__*/\n      // SEARCHBOOK COMPONENT\n      _jsxDEV(SearchBooks, {\n        books: books.length > 0 ? books : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          margin: \"20px auto\"\n        },\n        children: \"No books found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"AmET+vPOLQOVsgx+jg+VUQgVG+o=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/mohamed/Desktop/Devolop/React/nd0191-c1-myreads/starter/src/components/SearchView/Search.js"],"names":["React","useState","useEffect","useCallback","useMemo","debounce","Link","BooksAPI","SearchBooks","Search","query","setQuery","books","setBooks","searchBooksAPI","res","search","error","onHandleChange","e","target","value","debouncedResults","console","log","cancel","length","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport SearchBooks from \"./SearchBooks\";\n// controlled component\nconst Search = () => {\n  // state that holds my search quety\n  const [query, setQuery] = useState(\"\");\n  // state that holds books returned from the API\n  const [books, setBooks] = useState([]);\n  // using a callbackHook so that my async function does need to reintialize with every render #### that a soultion for react warning\n  const searchBooksAPI = useCallback(async () => {\n    if (query !== \"\") {\n      const res = await BooksAPI.search(query);\n      // handle API errors\n      if (!res.error) {\n        setBooks(res);\n      } else {\n        setBooks([]);\n      }\n    }\n  }, [query]);\n  // Function that handels the change\n  const onHandleChange = (e) => {\n    setQuery(e.target.value);\n  };\n  // Debounce the onHandleChange function to improve the performance and minimize the API requests\n  const debouncedResults = useMemo(() => {\n    return debounce(onHandleChange, 300);\n  }, []);\n  // with every letter or any change in the search input i requsting the server\n  useEffect(() => {\n    console.log(\"a time\");\n    searchBooksAPI();\n    if (query === \"\") {\n      setBooks([]);\n    }\n    return () => {\n      // clean up any side effects from debounce\n      debouncedResults.cancel();\n    };\n  }, [searchBooksAPI, query]);\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        {/* navigate to home */}\n        <Link to=\"/\" className=\"close-search\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            onChange={onHandleChange}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        {/* check if there is books or not */}\n        {books.length > 0 && query !== \"\" ? (\n          // SEARCHBOOK COMPONENT\n          <SearchBooks books={books.length > 0 ? books : []} />\n        ) : (\n          <h1 style={{ textAlign: \"center\", margin: \"20px auto\" }}>\n            No books found\n          </h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}