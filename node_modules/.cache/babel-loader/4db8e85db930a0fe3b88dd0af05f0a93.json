{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/Devolop/React/nd0191-c1-myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Home from \"./components/HomeView/Home\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Search from \"./components/SearchView/Search\";\nimport * as BooksAPI from \"./BooksAPI\"; // creating a context to provide a glopal state that can be accessed from any component in the application\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyBooksContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  // state that handels the books in my shelves\n  const [myBooks, setMyBooks] = useState([]); // state to let the user know that his request is in progress\n\n  const [Loading, setLoading] = useState(false); // function that send a request to the server to get my books and update the state\n\n  const getMyBooks = async () => {\n    setLoading(true);\n    const res = await BooksAPI.getAll();\n    setMyBooks(res);\n    setLoading(false);\n  }; // i put the function i useEffect so that with every render the books shlef updated\n\n\n  useEffect(() => {\n    getMyBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(MyBooksContext.Provider, {\n      value: {\n        myBooks,\n        getBooks: () => {\n          getMyBooks();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            Loading: Loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JDmvZjXDp9pbpoTAfvD7HzzgQZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mohamed/Desktop/Devolop/React/nd0191-c1-myreads/starter/src/App.js"],"names":["React","useState","createContext","useEffect","Home","BrowserRouter","Routes","Route","Search","BooksAPI","MyBooksContext","App","myBooks","setMyBooks","Loading","setLoading","getMyBooks","res","getAll","getBooks"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B,C,CAEA;;;AACA,OAAO,MAAMC,cAAc,gBAAGR,aAAa,EAApC;;AACP,SAASS,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAGb;;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC,CAJa,CAMb;;AACA,QAAMe,UAAU,GAAG,YAAY;AAC7BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMR,QAAQ,CAACS,MAAT,EAAlB;AACAL,IAAAA,UAAU,CAACI,GAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD,CAPa,CAab;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,aAAD;AAAA,2BAEE,QAAC,cAAD,CAAgB,QAAhB;AACE,MAAA,KAAK,EAAE;AACLJ,QAAAA,OADK;AAELO,QAAAA,QAAQ,EAAE,MAAM;AACdH,UAAAA,UAAU;AACX;AAJI,OADT;AAAA,6BAQE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,OAAO,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAnCQH,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Home from \"./components/HomeView/Home\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Search from \"./components/SearchView/Search\";\nimport * as BooksAPI from \"./BooksAPI\";\n\n// creating a context to provide a glopal state that can be accessed from any component in the application\nexport const MyBooksContext = createContext();\nfunction App() {\n  // state that handels the books in my shelves\n  const [myBooks, setMyBooks] = useState([]);\n  // state to let the user know that his request is in progress\n  const [Loading, setLoading] = useState(false);\n\n  // function that send a request to the server to get my books and update the state\n  const getMyBooks = async () => {\n    setLoading(true);\n    const res = await BooksAPI.getAll();\n    setMyBooks(res);\n    setLoading(false);\n  };\n  // i put the function i useEffect so that with every render the books shlef updated\n  useEffect(() => {\n    getMyBooks();\n  }, []);\n  return (\n    <BrowserRouter>\n      {/* here i wrapped my whole application with my CONTEXT */}\n      <MyBooksContext.Provider\n        value={{\n          myBooks,\n          getBooks: () => {\n            getMyBooks();\n          },\n        }}\n      >\n        <Routes>\n          <Route exact path=\"/\" element={<Home Loading={Loading} />} />\n          <Route exact path=\"/search\" element={<Search />} />\n        </Routes>\n      </MyBooksContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}